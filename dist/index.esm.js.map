{"version":3,"file":"index.esm.js","sources":["../src/components/ComplexTreeComponent.js","../src/components/ComplexTree.js","../src/components/Components.js"],"sourcesContent":["import React from 'react';\n// core dependencies\n// This only needs to be done once; probably during your application's bootstrapping process.\n\nimport { ControlledTreeEnvironment, Tree } from 'react-complex-tree';   // https://github.com/lukasbach/react-complex-tree\nimport 'react-complex-tree/lib/style.css';\n\nimport { structs } from 'modelui-core-runtime'\n\nexport const events = structs.TreeBase.events;\nexport const triggers = structs.TreeBase.triggers;\n\nexport const options = {\n  \"id\": \"tree-complex\",\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"description\": \"Complex Tree options\",\n  \"x-layout\": \"component\",\n  \"type\": \"object\",\n  \"version\": 0.1,\n  \"properties\": {\n    \"autoPlayStrategy\": {\n      \"title\": \"Auto Play Strategy\",\n      \"description\": \"Auto play strategy\",\n      \"type\": \"string\",\n      \"enum\": ['default', 'action', 'all', 'none'],\n      \"default\": \"default\"\n    },\n    \"autoPlayInterval\": {\n      \"title\": \"Auto Play Interval\",\n      \"description\": \"Auto play interval\",\n      \"type\": \"number\",\n      \"default\": 2000\n    },\n    \"infinite\": {\n      \"title\": \"Infinite\",\n      \"description\": \"Infinite\",\n      \"type\": \"boolean\",\n      \"default\": true\n    }\n  },\n  \"required\": [\"autoPlayStrategy\", \"autoPlayInterval\", \"infinite\"]\n}\n\n\nexport const config = {\n\n  name: \"Complex Tree\",\n  type: \"tree-complex\",\n  author: \"Kjartan JÃ³nsson\",\n  description: \"Complex Tree component\",\n  version: 0.1,\n  relation: {\n    contains: [],\n    within: \"component\" // parent\n  },\n  options: options,\n  state: structs.TreeBase.StateTree\n}\n// styles\n// event handler\n// https://react-swipeable-views.com/api/api/\n// https://maxmarinich.github.io/react-alice-carousel/#basic\n\n// const handleDragStart = (e) => e.preventDefault();\n\nclass ComplexTreeComponent extends structs.TreeBase.TreeBase {\n  /**\n   * Used to manage internal state of avatars\n   */\n\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.instance = null;\n    this.self = this;\n  }\n\n  getIdByEvent = (evt) => {\n    let event_data = null;\n    try {\n      event_data = this.state.data[evt.item];\n    } catch (e) {\n      // TODO: handle error where we could not index item\n      return\n    }\n    return event_data;\n  }\n\n  showSelected = (id, idx) => {\n    return true; // returns false to notify not to change state\n  }\n\n  updateView = (action, arr, updated, data) => {\n    // extend by parent\n    if (action === 'select') {\n      const selected_array = [];\n      arr.forEach(itm => { // for each item in selected array\n        selected_array.push(itm.id);\n      });\n      // this.instance.selectItems(selected_array, 'tree-1');\n      return true;\n    }\n    if (action === 'push') {\n      console.log(\"asfd\");\n      // this.instance.\n    }\n    return false;\n  }\n\n  handleDragStart = (e) => e.preventDefault();\n\n  canDrop = ({ node, nextParent, prevPath, nextPath }) => {\n    // check if node.type in node.group.allow and not in node.group.expel\n    if (nextParent) {\n      if (nextParent.drop) {\n        try {\n          if (nextParent.drop.allow) {\n            if (nextParent.drop.allow.includes(node.type)) { return true; }\n          }\n          if (nextParent.drop.deny) {\n            if (nextParent.drop.deny.includes(node.type)) { return false; }\n          }\n        } catch (e) { console.warning(\"Could not process drop: \" + e); return false; }\n        return true; // TODO: should be false\n      }\n    }\n    return false;\n  }\n\n  getList(data) {\n    const items = {};\n    const root_children = [];\n    data.forEach((itm) => {\n      // create if missing\n      if (!items[itm.id]) { items[itm.id] = {} }\n      // fill data\n      items[itm.id].index = itm.id;\n      items[itm.id].canMove = true;\n      items[itm.id].hasChildren = false;\n      items[itm.id].children = [];\n      items[itm.id].data = itm.title;\n      items[itm.id].canRename = true;\n      // if itm has parent\n      if (itm.parent) {\n        // create if missing\n        if (!items[itm.parent]) { items[itm.parent] = { children: [] } }\n        // add parent\n        items[itm.parent].children.push(itm.id);\n        items[itm.parent].hasChildren = true;\n      } else {\n        root_children.push(itm.id);\n      }\n    });\n\n    // TODO: check if zero then select find root\n    items[\"root\"] = {\n      index: 'root',\n      canMove: true,\n      hasChildren: true,\n      children: root_children,\n      data: 'Root item ---',\n      canRename: true,\n    }\n    return items;\n  }\n\n  onSelectItems = (items, treeId, b) => {\n    /// where items is an array of ids\n    if (items.length) {\n      const idx = this.findItemIndexById(items[0], this.state.data);\n      const itm = this.state.data[idx];\n      if (itm) {\n        if (itm.expanded !== undefined) {\n          itm.expanded = !itm.expanded;\n          this.updateItem(itm.id, itm, true); // updates without triggering event\n        }\n        this.triggerAction(\"select\", { id: itm.id })\n      }\n    }\n  }\n\n  onDrop = (items, target) => {\n    const itm = items[0]; // TODO: support multiple selection and movement of items\n    const data = [...this.state.data]; // copy\n    const idx = this.findItemIndexById(itm.index, this.state.data)\n    const moved = this.state.data[idx];\n    const parent_idx = this.findItemIndexById(target.parentItem, this.state.data)\n    const parent = this.state.data[parent_idx];\n    // TODO: check if can drop\n    // TODO: respect ordering (allow user to add on top or bellow other items)\n    if (moved && parent) { moved.parent = parent.id; }\n    this.triggerAction('replace', data);\n  }\n\n  render() {\n    // const TEAM_COLORS = ['Red', 'Black', 'Green', 'Blue'];\n    // const getNodeKey = ({ node: { id } }) => id;\n    const items = this.getList(this.state.data)\n    this.viewStyle = this.props.config.options;\n    const state = this.getItemTreeState();\n\n    return (\n      <ControlledTreeEnvironment\n        canDragAndDrop={true}\n        canDropOnItemWithChildren={true}\n        canReorderItems={true}\n        canRename={false} // disable for now\n        items={items}\n        // dataProvider={new StaticTreeDataProvider(items, (item, data) => ({ ...item, data }))}\n        getItemTitle={item => item.data}\n        onSelectItems={this.onSelectItems}\n        onDrop={this.onDrop}\n        viewState={{\n          ['tree-1']: {\n            expandedItems: state.expanded,\n            focusedItem: state.focused,\n            selectedItems: state.selected,\n          }\n        }\n        }\n        ref={instance => { this.instance = instance; }}\n      >\n        <Tree treeId=\"tree-1\" rootItem=\"root\" treeLabel=\"Tree Example\" />\n      </ControlledTreeEnvironment>\n    );\n    /*\n    return (\n      <div style={{ height: '100vh', width: '100%' }}>\n        <SortableTree\n          treeData={tree}\n          canDrop={this.canDrop}\n          onChange={(tree) => {\n            const data = this.getListFromTree(tree);\n\n            this.setInstanceState({ ...this.state, data: data, tree: tree });\n            // data changed lets notify\n            EventManager.getInstance().addEvent(this.props.id, 'changed', { count: data.length, items: data }, {});\n\n          }}\n\n          generateNodeProps={({ node, path }) => {\n            let x = {};\n            // if (node.id === this.state.selectedId) {\n            if (node.selected) {\n              x = {\n                boxShadow: `0 0 0 1px rgb(245 0 87 / 72%)`,\n              }\n            }\n            return {\n              style: x,\n              //title: `${playerColor} ${path.length === 1 ? 'Captain' : node.title}`,\n\n              onClick: () => {\n                /// FIXME: disabling code bellow will make open and closing the tree work again\n                const idx = this.findItemIndexById(node.id, this.state.data);\n                const tree_item = this.state.data[idx];\n                const state = { ...this.state };\n                state.selectedId = tree_item.id;\n                this.setState(state);\n                this.setSelectedId(state.selectedId);\n                ////\n              },\n            };\n          }\n          }\n        />\n      </div>\n    );\n    */\n  }\n\n}\n\nexport default ComplexTreeComponent;","import React from 'react';\n\nimport ComplexTreeComponent, { events as eventsComplexTree, triggers as triggersComplexTree, config as configComplexTree } from './ComplexTreeComponent'\n\nexport function ComplexTree(props) {\n    // lets enumerate schema to extract uiSchema and validation\n    return (<ComplexTreeComponent {...props} />);\n}\n\nexport function registerComplexTree(component_manager) {\n    // self register component to layout manager\n    component_manager.registerComponent({\n        component: ComplexTree,\n        type: 'tree-complex',\n        events: eventsComplexTree,\n        triggers: triggersComplexTree,\n        config: configComplexTree\n    });\n}\n","\n// Managers and factories\nimport { layout } from 'modelui-core-runtime';\n\n// Components\nimport { registerComplexTree } from './ComplexTree';\n\nexport default function registerComponents(component_manager) {\n\n    if (!component_manager) {\n        component_manager = layout.Manager.ComponentManager.getInstance();\n    }\n    /*\n    if (component_manager.constructor.name !== 'ComponentManager') {\n        throw `Constructor must be component manager. Got type ${component_manager.constructor.name}`;\n    }\n    */\n    registerComplexTree(component_manager);\n\n}"],"names":["events","structs","TreeBase","triggers","options","config","name","type","author","description","version","relation","contains","within","state","StateTree","ComplexTreeComponent","props","getIdByEvent","evt","event_data","data","item","e","showSelected","id","idx","updateView","action","arr","updated","selected_array","forEach","itm","push","console","log","handleDragStart","preventDefault","canDrop","node","nextParent","prevPath","nextPath","drop","allow","includes","deny","warning","onSelectItems","items","treeId","b","length","findItemIndexById","expanded","undefined","updateItem","triggerAction","onDrop","target","index","moved","parent_idx","parentItem","parent","instance","self","root_children","canMove","hasChildren","children","title","canRename","getList","viewStyle","getItemTreeState","expandedItems","focusedItem","focused","selectedItems","selected","ComplexTree","registerComplexTree","component_manager","registerComponent","component","eventsComplexTree","triggersComplexTree","configComplexTree","registerComponents","layout","Manager","ComponentManager","getInstance"],"mappings":"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"}